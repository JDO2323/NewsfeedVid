"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/videos/route";
exports.ids = ["app/api/videos/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fvideos%2Froute&page=%2Fapi%2Fvideos%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fvideos%2Froute.ts&appDir=%2Fhome%2Fproject%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fproject&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":
/*!**************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fvideos%2Froute&page=%2Fapi%2Fvideos%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fvideos%2Froute.ts&appDir=%2Fhome%2Fproject%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fproject&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \**************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _home_project_src_app_api_videos_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/videos/route.ts */ \"(rsc)/./src/app/api/videos/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/videos/route\",\n        pathname: \"/api/videos\",\n        filename: \"route\",\n        bundlePath: \"app/api/videos/route\"\n    },\n    resolvedPagePath: \"/home/project/src/app/api/videos/route.ts\",\n    nextConfigOutput,\n    userland: _home_project_src_app_api_videos_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/videos/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZ2aWRlb3MlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRnZpZGVvcyUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRnZpZGVvcyUyRnJvdXRlLnRzJmFwcERpcj0lMkZob21lJTJGcHJvamVjdCUyRnNyYyUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGaG9tZSUyRnByb2plY3QmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQ1A7QUFDdEU7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92aWRlby1hY3R1cy1uZXh0Lz8xM2Q4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9ob21lL3Byb2plY3Qvc3JjL2FwcC9hcGkvdmlkZW9zL3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS92aWRlb3Mvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS92aWRlb3NcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL3ZpZGVvcy9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9ob21lL3Byb2plY3Qvc3JjL2FwcC9hcGkvdmlkZW9zL3JvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS92aWRlb3Mvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fvideos%2Froute&page=%2Fapi%2Fvideos%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fvideos%2Froute.ts&appDir=%2Fhome%2Fproject%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fproject&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/videos/route.ts":
/*!*************************************!*\
  !*** ./src/app/api/videos/route.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_mockData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/mockData */ \"(rsc)/./src/lib/mockData.ts\");\n/* harmony import */ var _lib_videoAggregator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/videoAggregator */ \"(rsc)/./src/lib/videoAggregator.ts\");\n/* harmony import */ var _lib_videoUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/videoUtils */ \"(rsc)/./src/lib/videoUtils.ts\");\n\n\n\n\nasync function GET(request) {\n    const { searchParams } = new URL(request.url);\n    const category = searchParams.get(\"category\");\n    const query = searchParams.get(\"q\");\n    const sort = searchParams.get(\"sort\") || \"recent\";\n    const limit = parseInt(searchParams.get(\"limit\") || \"20\");\n    const offset = parseInt(searchParams.get(\"offset\") || \"0\");\n    const duration = searchParams.get(\"duration\");\n    const source = searchParams.get(\"source\");\n    const language = searchParams.get(\"language\");\n    const exclude = searchParams.get(\"exclude\");\n    const subscriptions = searchParams.get(\"subscriptions\")?.split(\",\") || [];\n    const lastViewed = searchParams.get(\"lastViewed\")?.split(\",\") || [];\n    const includeFrench = searchParams.get(\"includeFrench\") === \"true\";\n    let freshVideos = (0,_lib_videoUtils__WEBPACK_IMPORTED_MODULE_3__.filterVideosByFreshness)(_lib_mockData__WEBPACK_IMPORTED_MODULE_1__.MOCK_VIDEOS);\n    // Intégrer les vidéos françaises si demandé\n    if (includeFrench) {\n        try {\n            const frenchVideos = await _lib_videoAggregator__WEBPACK_IMPORTED_MODULE_2__.videoAggregator.aggregateAllSources();\n            const convertedVideos = frenchVideos.filter((v)=>v.status === \"approved\").map((v)=>({\n                    id: v.id,\n                    title: v.title,\n                    description: v.description,\n                    category: v.tags.includes(\"politics\") ? \"politics\" : v.tags.includes(\"economy\") ? \"economy\" : v.tags.includes(\"sports\") ? \"sports\" : \"culture\",\n                    dynamicTags: v.tags,\n                    source: v.sourceId.includes(\"youtube\") ? \"youtube\" : \"rss\",\n                    url: v.url,\n                    thumbnail: v.thumbnail,\n                    durationSec: v.duration,\n                    publishedAt: v.publishedAt,\n                    views: Math.floor(Math.random() * 100000) + 1000,\n                    language: v.language,\n                    visible: true,\n                    creator: v.creator ? {\n                        id: v.creator.channelId || v.sourceId,\n                        name: v.creator.name,\n                        subscriberCount: Math.floor(Math.random() * 500000) + 10000\n                    } : undefined,\n                    likes: Math.floor(Math.random() * 5000) + 100,\n                    comments: Math.floor(Math.random() * 1000) + 50\n                }));\n            freshVideos = [\n                ...convertedVideos,\n                ...freshVideos\n            ];\n        } catch (error) {\n            console.error(\"Error fetching French videos:\", error);\n        }\n    }\n    // Apply filters\n    if (category) {\n        // Support both old format (politics, economy, etc) and new Google News format\n        freshVideos = freshVideos.filter((v)=>v.category === category || category === \"politics\" && v.category === \"france\" || category === \"economy\" && v.category === \"economie\" || category === \"sports\" && v.category === \"sport\" || category === \"technology\" && v.category === \"technologie\" || category === \"entertainment\" && v.category === \"divertissement\" || category === \"health\" && v.category === \"sante\");\n    }\n    if (query) {\n        const searchLower = query.toLowerCase();\n        freshVideos = freshVideos.filter((v)=>v.title.toLowerCase().includes(searchLower) || v.description.toLowerCase().includes(searchLower) || v.dynamicTags.some((tag)=>tag.toLowerCase().includes(searchLower)) || v.creator?.name.toLowerCase().includes(searchLower));\n    }\n    if (duration) {\n        freshVideos = freshVideos.filter((v)=>(0,_lib_videoUtils__WEBPACK_IMPORTED_MODULE_3__.durationBucket)(v.durationSec) === duration);\n    }\n    if (source) {\n        freshVideos = freshVideos.filter((v)=>v.source === source);\n    }\n    if (language) {\n        freshVideos = freshVideos.filter((v)=>v.language === language);\n    }\n    if (exclude) {\n        freshVideos = freshVideos.filter((v)=>v.id !== exclude);\n    }\n    // Ensure minimum videos for categories (auto-backfill)\n    if (category) {\n        freshVideos = (0,_lib_videoUtils__WEBPACK_IMPORTED_MODULE_3__.ensureMinimumVideos)(freshVideos, (0,_lib_videoUtils__WEBPACK_IMPORTED_MODULE_3__.filterVideosByFreshness)(_lib_mockData__WEBPACK_IMPORTED_MODULE_1__.MOCK_VIDEOS));\n    }\n    // Sort videos\n    switch(sort){\n        case \"popular\":\n            freshVideos.sort((a, b)=>b.views - a.views);\n            break;\n        case \"personalized\":\n            // Mock personalization: prioritize subscribed categories and last viewed\n            freshVideos.sort((a, b)=>{\n                const aScore = (subscriptions.includes(a.category) ? 100 : 0) + (lastViewed.includes(a.category) ? 50 : 0) + a.views / 10000;\n                const bScore = (subscriptions.includes(b.category) ? 100 : 0) + (lastViewed.includes(b.category) ? 50 : 0) + b.views / 10000;\n                return bScore - aScore;\n            });\n            break;\n        case \"recent\":\n        default:\n            freshVideos.sort((a, b)=>new Date(b.publishedAt).getTime() - new Date(a.publishedAt).getTime());\n            break;\n    }\n    // Apply pagination\n    const paginatedVideos = freshVideos.slice(offset, offset + limit);\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(paginatedVideos);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/videos/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/frenchNewsSources.ts":
/*!**************************************!*\
  !*** ./src/lib/frenchNewsSources.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FRENCH_NEWS_SOURCES: () => (/* binding */ FRENCH_NEWS_SOURCES),\n/* harmony export */   getAllActiveSources: () => (/* binding */ getAllActiveSources),\n/* harmony export */   getSourceById: () => (/* binding */ getSourceById),\n/* harmony export */   getSourcesByCategory: () => (/* binding */ getSourcesByCategory)\n/* harmony export */ });\nconst FRENCH_NEWS_SOURCES = [\n    // 🏛️ Chaînes d'information françaises - Info continue\n    {\n        id: \"bfmtv\",\n        name: \"BFM TV\",\n        type: \"youtube\",\n        url: \"https://www.youtube.com/@BFMTV\",\n        channelId: \"UCVhz5v8nOp6wgkKIq7fYyJA\",\n        rssUrl: \"https://www.bfmtv.com/rss/info/\",\n        category: \"politics\",\n        language: \"fr\",\n        verified: true,\n        active: true,\n        icon: \"\\uD83D\\uDCFA\",\n        description: \"Premi\\xe8re cha\\xeene d'info en continu fran\\xe7aise\"\n    },\n    {\n        id: \"cnews\",\n        name: \"CNEWS\",\n        type: \"youtube\",\n        url: \"https://www.youtube.com/@CNEWS\",\n        channelId: \"UCj9M_1Uo8FZJTlgBTp7PUpw\",\n        rssUrl: \"https://www.cnews.fr/rss/actualites\",\n        category: \"politics\",\n        language: \"fr\",\n        verified: true,\n        active: true,\n        icon: \"\\uD83D\\uDCE1\",\n        description: \"Cha\\xeene d'information en continu du groupe Canal+\"\n    },\n    {\n        id: \"franceinfo\",\n        name: \"France Info\",\n        type: \"youtube\",\n        url: \"https://www.youtube.com/@franceinfo\",\n        channelId: \"UCO6K_kkdP-lnSCiO3tPx7WA\",\n        rssUrl: \"https://www.francetvinfo.fr/titres.rss\",\n        category: \"politics\",\n        language: \"fr\",\n        verified: true,\n        active: true,\n        icon: \"\\uD83C\\uDDEB\\uD83C\\uDDF7\",\n        description: \"Service public d'information de France T\\xe9l\\xe9visions\"\n    },\n    {\n        id: \"lci\",\n        name: \"LCI\",\n        type: \"youtube\",\n        url: \"https://www.youtube.com/@LCI\",\n        channelId: \"UCTQhTxl6NbNk6_7JOqR0lfQ\",\n        category: \"politics\",\n        language: \"fr\",\n        verified: true,\n        active: true,\n        icon: \"\\uD83D\\uDCFA\",\n        description: \"La Cha\\xeene Info - TF1 Group\"\n    },\n    // 🌍 Chaînes internationales en français\n    {\n        id: \"euronews_fr\",\n        name: \"Euronews Fran\\xe7ais\",\n        type: \"youtube\",\n        url: \"https://www.youtube.com/@euronewsfr\",\n        channelId: \"UCW2QcKZiU8aUGg4yxvEMAEQ\",\n        rssUrl: \"https://fr.euronews.com/rss\",\n        category: \"politics\",\n        language: \"fr\",\n        verified: true,\n        active: true,\n        icon: \"\\uD83C\\uDDEA\\uD83C\\uDDFA\",\n        description: \"Actualit\\xe9 europ\\xe9enne et internationale\"\n    },\n    {\n        id: \"tv5monde\",\n        name: \"TV5 Monde Info\",\n        type: \"youtube\",\n        url: \"https://www.youtube.com/@TV5MONDEINFO\",\n        channelId: \"UCdTyuXBjm-QgOGbHYKlsS6g\",\n        category: \"politics\",\n        language: \"fr\",\n        verified: true,\n        active: true,\n        icon: \"\\uD83C\\uDF0D\",\n        description: \"Information francophone internationale\"\n    },\n    {\n        id: \"france24_fr\",\n        name: \"France 24 Fran\\xe7ais\",\n        type: \"youtube\",\n        url: \"https://www.youtube.com/@FRANCE24\",\n        channelId: \"UCCCPCZNChQdGa9EkATeye4g\",\n        rssUrl: \"https://www.france24.com/fr/rss\",\n        category: \"politics\",\n        language: \"fr\",\n        verified: true,\n        active: true,\n        icon: \"\\uD83C\\uDDEB\\uD83C\\uDDF7\",\n        description: \"Actualit\\xe9 internationale fran\\xe7aise 24h/24\"\n    },\n    // 🏛️ Chaînes thématiques / régionales\n    {\n        id: \"lcp\",\n        name: \"LCP - Assembl\\xe9e Nationale\",\n        type: \"youtube\",\n        url: \"https://www.youtube.com/@LCP\",\n        channelId: \"UCVugY8K8OsElJqANG_891dA\",\n        category: \"politics\",\n        language: \"fr\",\n        verified: true,\n        active: true,\n        icon: \"\\uD83C\\uDFDB️\",\n        description: \"D\\xe9bats parlementaires et vie politique fran\\xe7aise\"\n    },\n    {\n        id: \"publicsenat\",\n        name: \"Public S\\xe9nat\",\n        type: \"youtube\",\n        url: \"https://www.youtube.com/@publicsenat\",\n        channelId: \"UCJt9JY7R_YfEuMRcHFvWKYA\",\n        category: \"politics\",\n        language: \"fr\",\n        verified: true,\n        active: true,\n        icon: \"\\uD83C\\uDFDB️\",\n        description: \"Cha\\xeene parlementaire du S\\xe9nat fran\\xe7ais\"\n    },\n    {\n        id: \"france3_regions\",\n        name: \"France 3 R\\xe9gions\",\n        type: \"youtube\",\n        url: \"https://www.youtube.com/@France3Regions\",\n        channelId: \"UC-8B7avwsKOxJYGN2mfKwuA\",\n        category: \"culture\",\n        language: \"fr\",\n        verified: true,\n        active: true,\n        icon: \"\\uD83D\\uDDFA️\",\n        description: \"Actualit\\xe9 r\\xe9gionale fran\\xe7aise\"\n    },\n    // 💼 Chaînes économiques / spécialisées\n    {\n        id: \"bfm_business\",\n        name: \"BFM Business\",\n        type: \"youtube\",\n        url: \"https://www.youtube.com/@BFMBusiness\",\n        channelId: \"UCaN1esmBJm7s6jTrp4gZNsw\",\n        rssUrl: \"https://www.bfmtv.com/economie/rss/\",\n        category: \"economy\",\n        language: \"fr\",\n        verified: true,\n        active: true,\n        icon: \"\\uD83D\\uDCBC\",\n        description: \"Information \\xe9conomique et financi\\xe8re\"\n    },\n    {\n        id: \"lesechos\",\n        name: \"Les Echos\",\n        type: \"youtube\",\n        url: \"https://www.youtube.com/@LesEchos\",\n        channelId: \"UCqGz1r0syZLCIvHF1vVKKsA\",\n        category: \"economy\",\n        language: \"fr\",\n        verified: true,\n        active: true,\n        icon: \"\\uD83D\\uDCC8\",\n        description: \"M\\xe9dia \\xe9conomique de r\\xe9f\\xe9rence\"\n    },\n    // 🎬 Chaînes alternatives / indépendantes\n    {\n        id: \"mediapart\",\n        name: \"Mediapart\",\n        type: \"youtube\",\n        url: \"https://www.youtube.com/@mediapart\",\n        channelId: \"UCX8x5wt4fJHCBmpVrg8lDNw\",\n        category: \"politics\",\n        language: \"fr\",\n        verified: true,\n        active: true,\n        icon: \"\\uD83D\\uDDDE️\",\n        description: \"Journalisme d'investigation ind\\xe9pendant\"\n    },\n    {\n        id: \"konbini\",\n        name: \"Konbini News\",\n        type: \"youtube\",\n        url: \"https://www.youtube.com/@konbininews\",\n        channelId: \"UCd1CqbqG4DOKHnhCnIJhPWw\",\n        category: \"culture\",\n        language: \"fr\",\n        verified: true,\n        active: true,\n        icon: \"\\uD83C\\uDFA5\",\n        description: \"Actualit\\xe9 d\\xe9cal\\xe9e pour les jeunes\"\n    },\n    {\n        id: \"brut\",\n        name: \"Brut\",\n        type: \"youtube\",\n        url: \"https://www.youtube.com/@brutofficiel\",\n        channelId: \"UCKy1dAqELo0zrOtPkf0eTMw\",\n        category: \"culture\",\n        language: \"fr\",\n        verified: true,\n        active: true,\n        icon: \"\\uD83C\\uDFAC\",\n        description: \"M\\xe9dia vid\\xe9o d'actualit\\xe9 pour les millennials\"\n    },\n    // 🏅 Chaînes sport\n    {\n        id: \"lequipe\",\n        name: \"L'\\xc9quipe\",\n        type: \"youtube\",\n        url: \"https://www.youtube.com/@lequipe\",\n        channelId: \"UCaJl3nEo_cJ4jCgtJ7Qjnfw\",\n        category: \"sports\",\n        language: \"fr\",\n        verified: true,\n        active: true,\n        icon: \"⚽\",\n        description: \"Toute l'actualit\\xe9 sportive fran\\xe7aise\"\n    },\n    // 🔬 Chaînes science/tech\n    {\n        id: \"scienceetavenir\",\n        name: \"Sciences et Avenir\",\n        type: \"youtube\",\n        url: \"https://www.youtube.com/@sciencesetavenir\",\n        channelId: \"UC8GJLpAHiWtKLUQdqoOirzg\",\n        category: \"science\",\n        language: \"fr\",\n        verified: true,\n        active: true,\n        icon: \"\\uD83D\\uDD2C\",\n        description: \"Actualit\\xe9 scientifique et innovation\"\n    }\n];\nconst getSourcesByCategory = (category)=>{\n    return FRENCH_NEWS_SOURCES.filter((source)=>source.category === category && source.active);\n};\nconst getSourceById = (id)=>{\n    return FRENCH_NEWS_SOURCES.find((source)=>source.id === id);\n};\nconst getAllActiveSources = ()=>{\n    return FRENCH_NEWS_SOURCES.filter((source)=>source.active);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/frenchNewsSources.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/mockData.ts":
/*!*****************************!*\
  !*** ./src/lib/mockData.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CATEGORIES: () => (/* binding */ CATEGORIES),\n/* harmony export */   MOCK_VIDEOS: () => (/* binding */ MOCK_VIDEOS),\n/* harmony export */   getDynamicCategories: () => (/* binding */ getDynamicCategories)\n/* harmony export */ });\n// Categories Google News FR\nconst GOOGLE_NEWS_CATEGORIES = [\n    {\n        id: \"1\",\n        name: \"Pour vous\",\n        slug: \"pour-vous\",\n        isDynamic: false,\n        icon: \"⭐\"\n    },\n    {\n        id: \"2\",\n        name: \"Actualit\\xe9 locale\",\n        slug: \"actualite-locale\",\n        isDynamic: false,\n        icon: \"\\uD83D\\uDCCD\"\n    },\n    {\n        id: \"3\",\n        name: \"France\",\n        slug: \"france\",\n        isDynamic: false,\n        icon: \"\\uD83C\\uDDEB\\uD83C\\uDDF7\"\n    },\n    {\n        id: \"4\",\n        name: \"Monde\",\n        slug: \"monde\",\n        isDynamic: false,\n        icon: \"\\uD83C\\uDF0D\"\n    },\n    {\n        id: \"5\",\n        name: \"\\xc9conomie\",\n        slug: \"economie\",\n        isDynamic: false,\n        icon: \"\\uD83D\\uDCBC\"\n    },\n    {\n        id: \"6\",\n        name: \"Science\",\n        slug: \"science\",\n        isDynamic: false,\n        icon: \"\\uD83D\\uDD2C\"\n    },\n    {\n        id: \"7\",\n        name: \"Sant\\xe9\",\n        slug: \"sante\",\n        isDynamic: false,\n        icon: \"\\uD83C\\uDFE5\"\n    },\n    {\n        id: \"8\",\n        name: \"Technologie\",\n        slug: \"technologie\",\n        isDynamic: false,\n        icon: \"\\uD83D\\uDCBB\"\n    },\n    {\n        id: \"9\",\n        name: \"Culture\",\n        slug: \"culture\",\n        isDynamic: false,\n        icon: \"\\uD83C\\uDFAD\"\n    },\n    {\n        id: \"10\",\n        name: \"Sport\",\n        slug: \"sport\",\n        isDynamic: false,\n        icon: \"⚽\"\n    },\n    {\n        id: \"11\",\n        name: \"Divertissement\",\n        slug: \"divertissement\",\n        isDynamic: false,\n        icon: \"\\uD83C\\uDFAC\"\n    }\n];\nconst generateMockVideos = ()=>{\n    const titles = {\n        \"pour-vous\": [\n            \"Breaking: Nouvelle politique climatique annonc\\xe9e\",\n            \"\\xc9lections: Les derniers sondages r\\xe9v\\xe8lent des surprises\",\n            \"\\xc9conomie: Les march\\xe9s r\\xe9agissent aux nouvelles mesures\",\n            \"Sport: Victoire historique de l'\\xe9quipe de France\",\n            \"Tech: Intelligence artificielle, r\\xe9volution en cours\"\n        ],\n        \"actualite-locale\": [\n            \"Paris: Nouvelle ligne de m\\xe9tro inaugur\\xe9e\",\n            \"Lyon: Festival culturel attire des milliers de visiteurs\",\n            \"Marseille: Projet urbain ambitieux d\\xe9voil\\xe9\",\n            \"Toulouse: Innovation spatiale, nouvelle mission\",\n            \"Bordeaux: Vignobles face aux d\\xe9fis climatiques\"\n        ],\n        \"france\": [\n            \"Assembl\\xe9e Nationale: Vote crucial sur la r\\xe9forme\",\n            \"Gouvernement: Remaniement minist\\xe9riel en vue\",\n            \"Justice: Affaire judiciaire majeure d\\xe9veloppements\",\n            \"\\xc9ducation: R\\xe9forme scolaire, r\\xe9actions mitig\\xe9es\",\n            \"S\\xe9curit\\xe9: Nouvelles mesures antiterroristes\"\n        ],\n        \"monde\": [\n            \"Ukraine: N\\xe9gociations diplomatiques intensifi\\xe9es\",\n            \"\\xc9tats-Unis: \\xc9lections pr\\xe9sidentielles, candidats\",\n            \"Chine: \\xc9conomie mondiale, impacts analys\\xe9s\",\n            \"Brexit: Cons\\xe9quences sur l'Europe \\xe9valu\\xe9es\",\n            \"Afrique: D\\xe9veloppement durable, projets innovants\"\n        ],\n        \"economie\": [\n            \"CAC 40: Envol\\xe9e des valeurs technologiques\",\n            \"Crypto: Bitcoin franchit nouveau seuil historique\",\n            \"PME: Plan de relance, premiers r\\xe9sultats\",\n            \"Commerce: Accords internationaux sign\\xe9s r\\xe9cemment\",\n            \"Inflation: Impact consommation, analyse d\\xe9taill\\xe9e\"\n        ],\n        \"science\": [\n            \"Espace: D\\xe9couverte exoplan\\xe8te potentiellement habitable\",\n            \"Climat: Recherche r\\xe9volutionnaire sur r\\xe9chauffement\",\n            \"M\\xe9decine: Perc\\xe9e majeure traitement cancer\",\n            \"Physique: Exp\\xe9rience quantique r\\xe9sultats surprenants\",\n            \"Biologie: G\\xe9n\\xe9tique, avanc\\xe9es th\\xe9rapeutiques prometteuses\"\n        ],\n        \"sante\": [\n            \"Covid-19: Nouveau variant d\\xe9tect\\xe9, recommandations\",\n            \"Nutrition: \\xc9tude r\\xe9v\\xe8le bienfaits alimentation m\\xe9diterran\\xe9enne\",\n            \"Mental: Campagne sensibilisation sant\\xe9 psychologique\",\n            \"Recherche: Traitement innovant maladie rare\",\n            \"Pr\\xe9vention: D\\xe9pistage pr\\xe9coce, nouvelles techniques\"\n        ],\n        \"technologie\": [\n            \"IA: ChatGPT r\\xe9volutionne industrie \\xe9ducative\",\n            \"Smartphones: Nouveau flagship, fonctionnalit\\xe9s r\\xe9volutionnaires\",\n            \"Cybers\\xe9curit\\xe9: Alerte menaces, protection renforc\\xe9e\",\n            \"Start-up: Licorne fran\\xe7aise l\\xe8ve fonds record\",\n            \"Informatique: Quantique, avanc\\xe9es computationnelles majeures\"\n        ],\n        \"culture\": [\n            \"Cannes: Palme d'or 2024, cin\\xe9ma fran\\xe7ais\",\n            \"Musique: Festival \\xe9t\\xe9, programmation exceptionnelle\",\n            \"Litt\\xe9rature: Prix Goncourt, s\\xe9lection annonc\\xe9e\",\n            \"Patrimoine: Restauration monument historique achev\\xe9e\",\n            \"Art: Exposition moderne, succ\\xe8s public critique\"\n        ],\n        \"sport\": [\n            \"Football: PSG remporte match d\\xe9cisif europ\\xe9en\",\n            \"Tennis: Roland Garros, finale fran\\xe7aise historique\",\n            \"Rugby: XV France pr\\xe9pare tournoi\",\n            \"JO 2024: Athl\\xe8tes fran\\xe7ais, pr\\xe9paration intensive\",\n            \"Cyclisme: Tour France, \\xe9tape spectaculaire\"\n        ],\n        \"divertissement\": [\n            \"Cin\\xe9ma: Blockbuster fran\\xe7ais cartonne international\",\n            \"TV: Nouvelle s\\xe9rie succ\\xe8s plateforme fran\\xe7aise\",\n            \"C\\xe9l\\xe9brit\\xe9s: Interview exclusive star internationale\",\n            \"Mode: Fashion Week Paris, cr\\xe9ateurs \\xe9mergents\",\n            \"Gaming: Jeu vid\\xe9o fran\\xe7ais remporte prix\"\n        ]\n    };\n    const sources = [\n        {\n            type: \"youtube\",\n            prefix: \"YT\"\n        },\n        {\n            type: \"rss\",\n            prefix: \"RSS\"\n        },\n        {\n            type: \"creator\",\n            prefix: \"CR\"\n        }\n    ];\n    const dynamicTags = [\n        \"breaking-news\",\n        \"elections-2024\",\n        \"climate-summit\",\n        \"tech-innovation\",\n        \"covid-updates\",\n        \"ukraine-conflict\",\n        \"economic-crisis\",\n        \"sports-finals\",\n        \"cultural-events\",\n        \"health-breakthrough\"\n    ];\n    const videos = [];\n    let idCounter = 1;\n    // Generate videos for each Google News category\n    Object.entries(titles).forEach(([category, categoryTitles])=>{\n        categoryTitles.forEach((title, index)=>{\n            const daysAgo = Math.floor(Math.random() * 7) + 1;\n            const publishedAt = new Date(Date.now() - daysAgo * 24 * 60 * 60 * 1000);\n            const source = sources[Math.floor(Math.random() * sources.length)];\n            const duration = Math.floor(Math.random() * 1800) + 30; // 30s to 30min\n            const views = Math.floor(Math.random() * 2000000) + 1000;\n            const likes = Math.floor(views * (Math.random() * 0.08 + 0.02));\n            const comments = Math.floor(likes * (Math.random() * 0.2 + 0.1));\n            // Premier video de chaque catégorie = main video (plus de vues)\n            const isMainVideo = index === 0;\n            const adjustedViews = isMainVideo ? views * 3 : views;\n            videos.push({\n                id: `${idCounter++}`,\n                title,\n                description: `${title} - Analyse approfondie avec experts et témoignages. Restez informé des derniers développements.`,\n                category,\n                dynamicTags: [\n                    dynamicTags[Math.floor(Math.random() * dynamicTags.length)]\n                ],\n                source: source.type,\n                url: `https://example.com/video/${idCounter}`,\n                thumbnail: `https://images.pexels.com/photos/${1000000 + idCounter}/pexels-photo-${1000000 + idCounter}.jpeg?auto=compress&cs=tinysrgb&w=640&h=360`,\n                durationSec: duration,\n                publishedAt: publishedAt.toISOString(),\n                views: adjustedViews,\n                language: \"fr\",\n                visible: true,\n                likes,\n                comments,\n                creator: {\n                    id: `creator-${Math.floor(index / 2) + 1}`,\n                    name: index === 0 ? \"BFM TV\" : index === 1 ? \"France Info\" : index === 2 ? \"Le Figaro\" : `Créateur ${Math.floor(index / 2) + 1}`,\n                    subscriberCount: Math.floor(Math.random() * 1000000) + 50000\n                }\n            });\n        });\n    });\n    return videos;\n};\nconst MOCK_VIDEOS = generateMockVideos();\nconst CATEGORIES = GOOGLE_NEWS_CATEGORIES;\nconst getDynamicCategories = (videos)=>{\n    const tagCounts = new Map();\n    videos.forEach((video)=>{\n        video.dynamicTags.forEach((tag)=>{\n            tagCounts.set(tag, (tagCounts.get(tag) || 0) + 1);\n        });\n    });\n    return Array.from(tagCounts.entries()).sort(([, a], [, b])=>b - a).slice(0, 5).map(([tag, count], index)=>({\n            id: `dynamic-${tag}`,\n            name: tag.split(\"-\").map((word)=>word.charAt(0).toUpperCase() + word.slice(1)).join(\" \"),\n            slug: tag,\n            isDynamic: true\n        }));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/mockData.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/videoAggregator.ts":
/*!************************************!*\
  !*** ./src/lib/videoAggregator.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VideoAggregator: () => (/* binding */ VideoAggregator),\n/* harmony export */   videoAggregator: () => (/* binding */ videoAggregator)\n/* harmony export */ });\n/* harmony import */ var _frenchNewsSources__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./frenchNewsSources */ \"(rsc)/./src/lib/frenchNewsSources.ts\");\n\nclass VideoAggregator {\n    constructor(){\n        this.apiKeys = new Map();\n        this.metrics = new Map();\n        // En production, ces clés seraient dans les variables d'environnement\n        this.apiKeys.set(\"youtube\", process.env.YOUTUBE_API_KEY || \"demo-key\");\n    }\n    // 📺 YouTube Data API Integration\n    async fetchFromYouTube(source, maxResults = 25) {\n        if (!source.channelId) {\n            throw new Error(`No channel ID configured for ${source.name}`);\n        }\n        const apiKey = this.apiKeys.get(\"youtube\");\n        if (!apiKey || apiKey === \"demo-key\") {\n            // Mode démo avec données simulées\n            return this.generateMockVideosForSource(source, maxResults);\n        }\n        try {\n            // Récupération des vidéos récentes (7 derniers jours)\n            const searchUrl = `https://www.googleapis.com/youtube/v3/search?` + `key=${apiKey}&channelId=${source.channelId}&part=snippet&order=date&type=video&` + `maxResults=${maxResults}&publishedAfter=${this.getSevenDaysAgo()}`;\n            const searchResponse = await fetch(searchUrl);\n            const searchData = await searchResponse.json();\n            if (!searchData.items) {\n                throw new Error(`No videos found for ${source.name}`);\n            }\n            // Récupération des détails des vidéos\n            const videoIds = searchData.items.map((item)=>item.id.videoId).join(\",\");\n            const detailsUrl = `https://www.googleapis.com/youtube/v3/videos?` + `key=${apiKey}&id=${videoIds}&part=snippet,contentDetails,statistics`;\n            const detailsResponse = await fetch(detailsUrl);\n            const detailsData = await detailsResponse.json();\n            return detailsData.items.map((video)=>this.mapYouTubeVideo(video, source));\n        } catch (error) {\n            console.error(`Error fetching from YouTube for ${source.name}:`, error);\n            this.updateMetrics(source.id, {\n                successRate: 0,\n                lastError: error.message\n            });\n            return [];\n        }\n    }\n    // 📡 RSS Feed Integration\n    async fetchFromRSS(source, maxResults = 15) {\n        if (!source.rssUrl) {\n            throw new Error(`No RSS URL configured for ${source.name}`);\n        }\n        try {\n            // En production, utiliser un proxy CORS ou un service backend\n            const response = await fetch(`/api/rss-proxy?url=${encodeURIComponent(source.rssUrl)}`);\n            const rssData = await response.json();\n            return rssData.items.slice(0, maxResults).filter((item)=>this.isRecentArticle(item.pubDate)).map((item)=>this.mapRSSItem(item, source));\n        } catch (error) {\n            console.error(`Error fetching RSS for ${source.name}:`, error);\n            return this.generateMockVideosForSource(source, Math.min(maxResults, 5));\n        }\n    }\n    // 🔄 Aggregation complète\n    async aggregateAllSources() {\n        const allVideos = [];\n        const activeSource = _frenchNewsSources__WEBPACK_IMPORTED_MODULE_0__.FRENCH_NEWS_SOURCES.filter((s)=>s.active);\n        const promises = activeSource.map(async (source)=>{\n            try {\n                let videos = [];\n                switch(source.type){\n                    case \"youtube\":\n                        videos = await this.fetchFromYouTube(source);\n                        break;\n                    case \"rss\":\n                        videos = await this.fetchFromRSS(source);\n                        break;\n                    default:\n                        videos = this.generateMockVideosForSource(source, 10);\n                }\n                // Mise à jour des métriques\n                this.updateMetrics(source.id, {\n                    videosToday: videos.filter((v)=>this.isToday(v.publishedAt)).length,\n                    videosWeek: videos.length,\n                    successRate: videos.length > 0 ? 100 : 0\n                });\n                return videos;\n            } catch (error) {\n                console.error(`Error aggregating from ${source.name}:`, error);\n                this.updateMetrics(source.id, {\n                    successRate: 0,\n                    lastError: error.message,\n                    videosToday: 0,\n                    videosWeek: 0\n                });\n                return [];\n            }\n        });\n        const results = await Promise.allSettled(promises);\n        results.forEach((result)=>{\n            if (result.status === \"fulfilled\") {\n                allVideos.push(...result.value);\n            }\n        });\n        return allVideos;\n    }\n    // 🛠️ Utility Methods\n    mapYouTubeVideo(video, source) {\n        return {\n            id: `yt_${video.id.videoId}`,\n            sourceId: source.id,\n            originalId: video.id.videoId,\n            title: video.snippet.title,\n            description: video.snippet.description,\n            thumbnail: video.snippet.thumbnails.high?.url || video.snippet.thumbnails.medium.url,\n            duration: this.parseDuration(video.contentDetails.duration),\n            publishedAt: video.snippet.publishedAt,\n            url: `https://www.youtube.com/watch?v=${video.id.videoId}`,\n            tags: [],\n            status: \"pending\",\n            language: source.language,\n            creator: {\n                name: video.snippet.channelTitle,\n                channelId: video.snippet.channelId\n            }\n        };\n    }\n    mapRSSItem(item, source) {\n        return {\n            id: `rss_${source.id}_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n            sourceId: source.id,\n            originalId: item.link,\n            title: item.title,\n            description: item.description,\n            thumbnail: item.enclosure?.url || `https://images.pexels.com/photos/${Math.floor(Math.random() * 1000000) + 1000000}/pexels-photo-${Math.floor(Math.random() * 1000000) + 1000000}.jpeg?auto=compress&cs=tinysrgb&w=640&h=360`,\n            duration: Math.floor(Math.random() * 600) + 120,\n            publishedAt: new Date(item.pubDate).toISOString(),\n            url: item.link,\n            tags: [],\n            status: \"pending\",\n            language: source.language,\n            creator: {\n                name: source.name\n            }\n        };\n    }\n    parseDuration(duration) {\n        // Parse ISO 8601 duration (PT4M13S -> 253 seconds)\n        const match = duration.match(/PT(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+)S)?/);\n        if (!match) return 0;\n        const hours = parseInt(match[1] || \"0\");\n        const minutes = parseInt(match[2] || \"0\");\n        const seconds = parseInt(match[3] || \"0\");\n        return hours * 3600 + minutes * 60 + seconds;\n    }\n    getSevenDaysAgo() {\n        const date = new Date();\n        date.setDate(date.getDate() - 7);\n        return date.toISOString();\n    }\n    isRecentArticle(pubDate) {\n        const articleDate = new Date(pubDate);\n        const sevenDaysAgo = new Date();\n        sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);\n        return articleDate >= sevenDaysAgo;\n    }\n    isToday(dateString) {\n        const date = new Date(dateString);\n        const today = new Date();\n        return date.toDateString() === today.toDateString();\n    }\n    updateMetrics(sourceId, updates) {\n        const existing = this.metrics.get(sourceId) || {\n            sourceId,\n            videosToday: 0,\n            videosWeek: 0,\n            totalViews: 0,\n            avgViews: 0,\n            successRate: 100,\n            uptime: 100\n        };\n        this.metrics.set(sourceId, {\n            ...existing,\n            ...updates\n        });\n    }\n    getMetrics(sourceId) {\n        return this.metrics.get(sourceId);\n    }\n    getAllMetrics() {\n        return Array.from(this.metrics.values());\n    }\n    // 🎯 Mock data pour la démo\n    generateMockVideosForSource(source, count) {\n        const titles = {\n            politics: [\n                \"D\\xe9bat \\xe0 l'Assembl\\xe9e: Nouvelle loi sur le climat\",\n                \"Interview exclusive: Le ministre r\\xe9pond aux critiques\",\n                \"Manifestations: Les syndicats mobilis\\xe9s\",\n                \"\\xc9lections europ\\xe9ennes: Analyse des r\\xe9sultats\",\n                \"R\\xe9forme des retraites: Les derni\\xe8res n\\xe9gociations\"\n            ],\n            economy: [\n                \"CAC 40: Forte hausse des valeurs tech\",\n                \"Inflation: Impact sur le pouvoir d'achat\",\n                \"Start-up fran\\xe7aises: Lev\\xe9es de fonds record\",\n                \"Commerce international: Nouveaux accords\",\n                \"Immobilier: \\xc9volution des prix en r\\xe9gion\"\n            ],\n            sports: [\n                \"Roland Garros: R\\xe9sultats des quarts de finale\",\n                \"\\xc9quipe de France: Pr\\xe9paration pour l'Euro\",\n                \"Ligue 1: Classement apr\\xe8s la 30e journ\\xe9e\",\n                \"JO 2024: Pr\\xe9paratifs des athl\\xe8tes fran\\xe7ais\",\n                \"Rugby: Victoire du XV de France\"\n            ],\n            culture: [\n                \"Festival de Cannes: Palme d'or 2024\",\n                \"Th\\xe9\\xe2tre: Nouvelle pi\\xe8ce de succ\\xe8s\",\n                \"Musique: Album surprise d'un artiste fran\\xe7ais\",\n                \"Patrimoine: Restauration de monument historique\",\n                \"Art contemporain: Exposition majeure au Louvre\"\n            ],\n            science: [\n                \"Recherche fran\\xe7aise: D\\xe9couverte majeure en m\\xe9decine\",\n                \"Climat: Nouvelles donn\\xe9es scientifiques\",\n                \"Espace: Mission fran\\xe7aise vers Mars\",\n                \"Innovation: Nouvelle technologie r\\xe9volutionnaire\",\n                \"Sant\\xe9: Avanc\\xe9e dans le traitement du cancer\"\n            ]\n        };\n        const categoryTitles = titles[source.category] || titles.politics;\n        const results = [];\n        for(let i = 0; i < count; i++){\n            const title = categoryTitles[i % categoryTitles.length];\n            const hoursAgo = Math.floor(Math.random() * 168); // 7 jours\n            const publishedAt = new Date(Date.now() - hoursAgo * 60 * 60 * 1000);\n            results.push({\n                id: `mock_${source.id}_${i}`,\n                sourceId: source.id,\n                originalId: `original_${i}`,\n                title: `${title} - ${source.name}`,\n                description: `Reportage exclusif de ${source.name} sur ${title.toLowerCase()}. Analysis approfondie avec des experts et témoignages directs.`,\n                thumbnail: `https://images.pexels.com/photos/${Math.floor(Math.random() * 1000000) + 1000000}/pexels-photo-${Math.floor(Math.random() * 1000000) + 1000000}.jpeg?auto=compress&cs=tinysrgb&w=640&h=360`,\n                duration: Math.floor(Math.random() * 900) + 180,\n                publishedAt: publishedAt.toISOString(),\n                url: source.type === \"youtube\" ? `https://www.youtube.com/watch?v=demo_${i}` : source.url,\n                tags: [\n                    source.category,\n                    \"france\",\n                    \"actualit\\xe9\"\n                ],\n                status: \"approved\",\n                language: \"fr\",\n                creator: {\n                    name: source.name,\n                    channelId: source.channelId\n                }\n            });\n        }\n        return results;\n    }\n}\n// Instance globale\nconst videoAggregator = new VideoAggregator();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/videoAggregator.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/videoUtils.ts":
/*!*******************************!*\
  !*** ./src/lib/videoUtils.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   durationBucket: () => (/* binding */ durationBucket),\n/* harmony export */   ensureMinimumVideos: () => (/* binding */ ensureMinimumVideos),\n/* harmony export */   filterVideosByFreshness: () => (/* binding */ filterVideosByFreshness),\n/* harmony export */   formatDuration: () => (/* binding */ formatDuration),\n/* harmony export */   formatRelativeTime: () => (/* binding */ formatRelativeTime),\n/* harmony export */   formatViewCount: () => (/* binding */ formatViewCount),\n/* harmony export */   isFresh: () => (/* binding */ isFresh)\n/* harmony export */ });\nconst isFresh = (iso)=>{\n    const pub = new Date(iso).getTime();\n    const now = Date.now();\n    const sevenDays = 7 * 24 * 60 * 60 * 1000;\n    return now - pub <= sevenDays;\n};\nconst durationBucket = (sec)=>{\n    if (sec < 300) return \"short\";\n    if (sec <= 1200) return \"medium\";\n    return \"long\";\n};\nconst formatDuration = (seconds)=>{\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, \"0\")}`;\n};\nconst formatRelativeTime = (iso)=>{\n    const now = new Date();\n    const published = new Date(iso);\n    const diffMs = now.getTime() - published.getTime();\n    const diffHours = Math.floor(diffMs / (1000 * 60 * 60));\n    const diffDays = Math.floor(diffHours / 24);\n    if (diffHours < 1) return \"Just now\";\n    if (diffHours < 24) return `${diffHours}h ago`;\n    if (diffDays === 1) return \"Yesterday\";\n    return `${diffDays} days ago`;\n};\nconst filterVideosByFreshness = (videos)=>{\n    return videos.filter((video)=>isFresh(video.publishedAt) && video.visible);\n};\nconst ensureMinimumVideos = (videos, allVideos, minCount = 12)=>{\n    if (videos.length >= minCount) return videos;\n    const additionalVideos = allVideos.filter((v)=>!videos.find((existing)=>existing.id === v.id)).sort((a, b)=>b.views - a.views).slice(0, minCount - videos.length);\n    return [\n        ...videos,\n        ...additionalVideos\n    ];\n};\nconst formatViewCount = (views)=>{\n    if (views < 1000) return views.toString();\n    if (views < 1000000) return `${Math.floor(views / 1000)}K`;\n    return `${Math.floor(views / 1000000)}M`;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3ZpZGVvVXRpbHMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUVPLE1BQU1BLFVBQVUsQ0FBQ0M7SUFDdEIsTUFBTUMsTUFBTSxJQUFJQyxLQUFLRixLQUFLRyxPQUFPO0lBQ2pDLE1BQU1DLE1BQU1GLEtBQUtFLEdBQUc7SUFDcEIsTUFBTUMsWUFBWSxJQUFJLEtBQUssS0FBSyxLQUFLO0lBQ3JDLE9BQU9ELE1BQU1ILE9BQU9JO0FBQ3RCLEVBQUU7QUFFSyxNQUFNQyxpQkFBaUIsQ0FBQ0M7SUFDN0IsSUFBSUEsTUFBTSxLQUFLLE9BQU87SUFDdEIsSUFBSUEsT0FBTyxNQUFNLE9BQU87SUFDeEIsT0FBTztBQUNULEVBQUU7QUFFSyxNQUFNQyxpQkFBaUIsQ0FBQ0M7SUFDN0IsTUFBTUMsT0FBT0MsS0FBS0MsS0FBSyxDQUFDSCxVQUFVO0lBQ2xDLE1BQU1JLE9BQU9KLFVBQVU7SUFDdkIsT0FBTyxDQUFDLEVBQUVDLEtBQUssQ0FBQyxFQUFFRyxLQUFLQyxRQUFRLEdBQUdDLFFBQVEsQ0FBQyxHQUFHLEtBQUssQ0FBQztBQUN0RCxFQUFFO0FBRUssTUFBTUMscUJBQXFCLENBQUNoQjtJQUNqQyxNQUFNSSxNQUFNLElBQUlGO0lBQ2hCLE1BQU1lLFlBQVksSUFBSWYsS0FBS0Y7SUFDM0IsTUFBTWtCLFNBQVNkLElBQUlELE9BQU8sS0FBS2MsVUFBVWQsT0FBTztJQUNoRCxNQUFNZ0IsWUFBWVIsS0FBS0MsS0FBSyxDQUFDTSxTQUFVLFFBQU8sS0FBSyxFQUFDO0lBQ3BELE1BQU1FLFdBQVdULEtBQUtDLEtBQUssQ0FBQ08sWUFBWTtJQUV4QyxJQUFJQSxZQUFZLEdBQUcsT0FBTztJQUMxQixJQUFJQSxZQUFZLElBQUksT0FBTyxDQUFDLEVBQUVBLFVBQVUsS0FBSyxDQUFDO0lBQzlDLElBQUlDLGFBQWEsR0FBRyxPQUFPO0lBQzNCLE9BQU8sQ0FBQyxFQUFFQSxTQUFTLFNBQVMsQ0FBQztBQUMvQixFQUFFO0FBRUssTUFBTUMsMEJBQTBCLENBQUNDO0lBQ3RDLE9BQU9BLE9BQU9DLE1BQU0sQ0FBQ0MsQ0FBQUEsUUFBU3pCLFFBQVF5QixNQUFNQyxXQUFXLEtBQUtELE1BQU1FLE9BQU87QUFDM0UsRUFBRTtBQUVLLE1BQU1DLHNCQUFzQixDQUFDTCxRQUFpQk0sV0FBb0JDLFdBQVcsRUFBRTtJQUNwRixJQUFJUCxPQUFPUSxNQUFNLElBQUlELFVBQVUsT0FBT1A7SUFFdEMsTUFBTVMsbUJBQW1CSCxVQUN0QkwsTUFBTSxDQUFDUyxDQUFBQSxJQUFLLENBQUNWLE9BQU9XLElBQUksQ0FBQ0MsQ0FBQUEsV0FBWUEsU0FBU0MsRUFBRSxLQUFLSCxFQUFFRyxFQUFFLEdBQ3pEQyxJQUFJLENBQUMsQ0FBQ0MsR0FBR0MsSUFBTUEsRUFBRUMsS0FBSyxHQUFHRixFQUFFRSxLQUFLLEVBQ2hDQyxLQUFLLENBQUMsR0FBR1gsV0FBV1AsT0FBT1EsTUFBTTtJQUVwQyxPQUFPO1dBQUlSO1dBQVdTO0tBQWlCO0FBQ3pDLEVBQUU7QUFFSyxNQUFNVSxrQkFBa0IsQ0FBQ0Y7SUFDOUIsSUFBSUEsUUFBUSxNQUFNLE9BQU9BLE1BQU16QixRQUFRO0lBQ3ZDLElBQUl5QixRQUFRLFNBQVMsT0FBTyxDQUFDLEVBQUU1QixLQUFLQyxLQUFLLENBQUMyQixRQUFRLE1BQU0sQ0FBQyxDQUFDO0lBQzFELE9BQU8sQ0FBQyxFQUFFNUIsS0FBS0MsS0FBSyxDQUFDMkIsUUFBUSxTQUFTLENBQUMsQ0FBQztBQUMxQyxFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdmlkZW8tYWN0dXMtbmV4dC8uL3NyYy9saWIvdmlkZW9VdGlscy50cz8wN2JkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFZpZGVvLCBEdXJhdGlvbkJ1Y2tldCB9IGZyb20gJ0AvdHlwZXMnO1xuXG5leHBvcnQgY29uc3QgaXNGcmVzaCA9IChpc286IHN0cmluZyk6IGJvb2xlYW4gPT4ge1xuICBjb25zdCBwdWIgPSBuZXcgRGF0ZShpc28pLmdldFRpbWUoKTtcbiAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTtcbiAgY29uc3Qgc2V2ZW5EYXlzID0gNyAqIDI0ICogNjAgKiA2MCAqIDEwMDA7XG4gIHJldHVybiBub3cgLSBwdWIgPD0gc2V2ZW5EYXlzO1xufTtcblxuZXhwb3J0IGNvbnN0IGR1cmF0aW9uQnVja2V0ID0gKHNlYzogbnVtYmVyKTogRHVyYXRpb25CdWNrZXQgPT4ge1xuICBpZiAoc2VjIDwgMzAwKSByZXR1cm4gJ3Nob3J0JztcbiAgaWYgKHNlYyA8PSAxMjAwKSByZXR1cm4gJ21lZGl1bSc7XG4gIHJldHVybiAnbG9uZyc7XG59O1xuXG5leHBvcnQgY29uc3QgZm9ybWF0RHVyYXRpb24gPSAoc2Vjb25kczogbnVtYmVyKTogc3RyaW5nID0+IHtcbiAgY29uc3QgbWlucyA9IE1hdGguZmxvb3Ioc2Vjb25kcyAvIDYwKTtcbiAgY29uc3Qgc2VjcyA9IHNlY29uZHMgJSA2MDtcbiAgcmV0dXJuIGAke21pbnN9OiR7c2Vjcy50b1N0cmluZygpLnBhZFN0YXJ0KDIsICcwJyl9YDtcbn07XG5cbmV4cG9ydCBjb25zdCBmb3JtYXRSZWxhdGl2ZVRpbWUgPSAoaXNvOiBzdHJpbmcpOiBzdHJpbmcgPT4ge1xuICBjb25zdCBub3cgPSBuZXcgRGF0ZSgpO1xuICBjb25zdCBwdWJsaXNoZWQgPSBuZXcgRGF0ZShpc28pO1xuICBjb25zdCBkaWZmTXMgPSBub3cuZ2V0VGltZSgpIC0gcHVibGlzaGVkLmdldFRpbWUoKTtcbiAgY29uc3QgZGlmZkhvdXJzID0gTWF0aC5mbG9vcihkaWZmTXMgLyAoMTAwMCAqIDYwICogNjApKTtcbiAgY29uc3QgZGlmZkRheXMgPSBNYXRoLmZsb29yKGRpZmZIb3VycyAvIDI0KTtcblxuICBpZiAoZGlmZkhvdXJzIDwgMSkgcmV0dXJuICdKdXN0IG5vdyc7XG4gIGlmIChkaWZmSG91cnMgPCAyNCkgcmV0dXJuIGAke2RpZmZIb3Vyc31oIGFnb2A7XG4gIGlmIChkaWZmRGF5cyA9PT0gMSkgcmV0dXJuICdZZXN0ZXJkYXknO1xuICByZXR1cm4gYCR7ZGlmZkRheXN9IGRheXMgYWdvYDtcbn07XG5cbmV4cG9ydCBjb25zdCBmaWx0ZXJWaWRlb3NCeUZyZXNobmVzcyA9ICh2aWRlb3M6IFZpZGVvW10pOiBWaWRlb1tdID0+IHtcbiAgcmV0dXJuIHZpZGVvcy5maWx0ZXIodmlkZW8gPT4gaXNGcmVzaCh2aWRlby5wdWJsaXNoZWRBdCkgJiYgdmlkZW8udmlzaWJsZSk7XG59O1xuXG5leHBvcnQgY29uc3QgZW5zdXJlTWluaW11bVZpZGVvcyA9ICh2aWRlb3M6IFZpZGVvW10sIGFsbFZpZGVvczogVmlkZW9bXSwgbWluQ291bnQgPSAxMik6IFZpZGVvW10gPT4ge1xuICBpZiAodmlkZW9zLmxlbmd0aCA+PSBtaW5Db3VudCkgcmV0dXJuIHZpZGVvcztcbiAgXG4gIGNvbnN0IGFkZGl0aW9uYWxWaWRlb3MgPSBhbGxWaWRlb3NcbiAgICAuZmlsdGVyKHYgPT4gIXZpZGVvcy5maW5kKGV4aXN0aW5nID0+IGV4aXN0aW5nLmlkID09PSB2LmlkKSlcbiAgICAuc29ydCgoYSwgYikgPT4gYi52aWV3cyAtIGEudmlld3MpXG4gICAgLnNsaWNlKDAsIG1pbkNvdW50IC0gdmlkZW9zLmxlbmd0aCk7XG4gICAgXG4gIHJldHVybiBbLi4udmlkZW9zLCAuLi5hZGRpdGlvbmFsVmlkZW9zXTtcbn07XG5cbmV4cG9ydCBjb25zdCBmb3JtYXRWaWV3Q291bnQgPSAodmlld3M6IG51bWJlcik6IHN0cmluZyA9PiB7XG4gIGlmICh2aWV3cyA8IDEwMDApIHJldHVybiB2aWV3cy50b1N0cmluZygpO1xuICBpZiAodmlld3MgPCAxMDAwMDAwKSByZXR1cm4gYCR7TWF0aC5mbG9vcih2aWV3cyAvIDEwMDApfUtgO1xuICByZXR1cm4gYCR7TWF0aC5mbG9vcih2aWV3cyAvIDEwMDAwMDApfU1gO1xufTsiXSwibmFtZXMiOlsiaXNGcmVzaCIsImlzbyIsInB1YiIsIkRhdGUiLCJnZXRUaW1lIiwibm93Iiwic2V2ZW5EYXlzIiwiZHVyYXRpb25CdWNrZXQiLCJzZWMiLCJmb3JtYXREdXJhdGlvbiIsInNlY29uZHMiLCJtaW5zIiwiTWF0aCIsImZsb29yIiwic2VjcyIsInRvU3RyaW5nIiwicGFkU3RhcnQiLCJmb3JtYXRSZWxhdGl2ZVRpbWUiLCJwdWJsaXNoZWQiLCJkaWZmTXMiLCJkaWZmSG91cnMiLCJkaWZmRGF5cyIsImZpbHRlclZpZGVvc0J5RnJlc2huZXNzIiwidmlkZW9zIiwiZmlsdGVyIiwidmlkZW8iLCJwdWJsaXNoZWRBdCIsInZpc2libGUiLCJlbnN1cmVNaW5pbXVtVmlkZW9zIiwiYWxsVmlkZW9zIiwibWluQ291bnQiLCJsZW5ndGgiLCJhZGRpdGlvbmFsVmlkZW9zIiwidiIsImZpbmQiLCJleGlzdGluZyIsImlkIiwic29ydCIsImEiLCJiIiwidmlld3MiLCJzbGljZSIsImZvcm1hdFZpZXdDb3VudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/videoUtils.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fvideos%2Froute&page=%2Fapi%2Fvideos%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fvideos%2Froute.ts&appDir=%2Fhome%2Fproject%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fproject&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();